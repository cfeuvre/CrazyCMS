<?php/*Copyright CrazyCMS : Valmori Quentin	quentin.valmori@gmail.comFeuvre Christophe	neowan@live.frHaustrate Kevin	gippel5@hotmail.comThis software is a computer program whose purpose is to make our own website. You just have to follow the automatic installation procedureand you website is operational. Moreover, He is securized and optimized as much as possible.This software is governed by the CeCILL² license under French law andabiding by the rules of distribution of free software.  You can  use, modify and/ or redistribute the software under the terms of the CeCILL²license as circulated by CEA, CNRS and INRIA at the following URL"http://www.cecill.info". The fact that you are presently reading this means that you have hadknowledge of the CeCILL² license and that you accept its terms.*/// On défini les variables longues si seuleme,et les courtes sont defini et on defini les variable courtes si seulement les longues sont definisif(!isset($HTTP_POST_VARS) AND isset($_POST)){	$HTTP_POST_VARS = $_POST;    $HTTP_GET_VARS = $_GET;    $HTTP_SERVER_VARS = $_SERVER;    $HTTP_COOKIE_VARS = $_COOKIE;    $HTTP_POST_FILES = $_FILES;}else if(isset($HTTP_POST_VARS) AND !isset($_POST)){    $_POST = $HTTP_POST_VARS;    $_GET = $HTTP_GET_VARS;    $_SERVER = $HTTP_SERVER_VARS;    $_COOKIE = $HTTP_COOKIE_VARS;    $_FILES = $HTTP_POST_FILES;}// Fonction pour afficher les différentes pages présentesfunction give_pages ( $pages , $templates , $url , $page ){	global $template;	if ( $pages > 1 AND $pages < 15 ){		// Si il y a moins de 15 pages, on peut se permettre d'afficher le lien vers chaque page ;)		foreach ( $templates AS $tpl )			$template->assign_block_vars ( $tpl , array ( 'PAGE' => PAGE ) );		for ( $i = 1; $i <= $pages; $i++ ){			$size = 2;			if ( $i == $page )$size = 5;			if ( $i == $page - 1 OR $i == $page + 1)$size = 4;			if ( $i == $page - 2 OR $i == $page + 2)$size = 3;			foreach ( $templates AS $tpl )				$template->assign_block_vars ( $tpl.'.pg' , array ( 					'URL' => $url.$i,					'SIZE' => $size,					'NM' => $i) );		}	}	else if ( $pages > 1 ){	// Si il y a plus de 15 pages, on affiche uniquement les 8 pages autour de celle actuelle ainsi que les 3 premieres et les 3 dernieres		foreach ( $templates AS $tpl )			$template->assign_block_vars ( $tpl, array ( 'PAGE' => PAGE ) );		for ( $i = 1; $i <= 3; $i++ ){			$size = 2;			if ( $i == $page )$size = 5;			if ( $i == $page - 1 OR $i == $page + 1)$size = 4;			if ( $i == $page - 2 OR $i == $page + 2)$size = 3;			foreach ( $templates AS $tpl )				$template->assign_block_vars ( $tpl.'.pg' , array ( 					'URL' => $url.$i,					'SIZE' => $size,					'NM' => $i) );		}		if ( $page <= 7 ){			for ( $i = 4; $i <= 9; $i++ ){				$size = 2;				if ( $i == $page )$size = 5;				if ( $i == $page - 1 OR $i == $page + 1)$size = 4;				if ( $i == $page - 2 OR $i == $page + 2)$size = 3;				foreach ( $templates AS $tpl )					$template->assign_block_vars ( $tpl.'.pg' , array ( 						'URL' => $url.$i,						'SIZE' => $size,						'NM' => $i) );			}			foreach ( $templates AS $tpl )				$template->assign_block_vars ( $tpl.'.pg.etc' , array() );		}		if ( $page > 7 AND $page < $pages -6 ){			if ( $page > 10 ){				foreach ( $templates AS $tpl )					$template->assign_block_vars ( $tpl.'.pg.etc' , array() );			}			for ( $i = $page - 4; $i <= $page + 4; $i++ ){				$size = 2;				if ( $i == $page )$size = 5;				if ( $i == $page - 1 OR $i == $page + 1)$size = 4;				if ( $i == $page - 2 OR $i == $page + 2)$size = 3;				foreach ( $templates AS $tpl )					$template->assign_block_vars ( $tpl.'.pg' , array ( 						'URL' => $url.$i,						'SIZE' => $size,						'NM' => $i) );			}			if ( $page < $pages - 7 ){				foreach ( $templates AS $tpl )					$template->assign_block_vars ( $tpl.'.pg.etc' , array() );			}		}		if ( $page >= $pages -6 ){			foreach ( $templates AS $tpl )				$template->assign_block_vars ( $tpl.'.pg.etc' , array() );			for ( $i = $pages - 9; $i < $pages - 2; $i++ ){				$size = 2;				if ( $i == $page )$size = 5;				if ( $i == $page - 1 OR $i == $page + 1)$size = 4;				if ( $i == $page - 2 OR $i == $page + 2)$size = 3;								foreach ( $templates AS $tpl )					$template->assign_block_vars ( $tpl.'.pg' , array ( 						'URL' => $url.$i,						'SIZE' => $size,						'NM' => $i) );			}		}		for ( $i = $pages - 2; $i <= $pages; $i++ ){			$size = 2;			if ( $i == $page )$size = 5;			if ( $i == $page - 1 OR $i == $page + 1)$size = 4;			if ( $i == $page - 2 OR $i == $page + 2)$size = 3;			foreach ( $templates AS $tpl )				$template->assign_block_vars ( $tpl.'.pg' , array ( 					'URL' => $url.$i,					'SIZE' => $size,					'NM' => $i) );		}	}}// Fonction pour redimensionner une image sans la deformerfunction resize ( $largeur_max , $hauteur_max , $largeur , $hauteur){				// Premier passage pour recalculer la dimension ( largeur ou hauteur ).	if($largeur>$largeur_max AND $hauteur>$hauteur_max){		$rapport = $largeur / $hauteur; 							$diff_width = ($largeur - $largeur_max) / $rapport; 		$diff_height = ($hauteur - $hauteur_max ) * $rapport; 		if($diff_width>$diff_height){ 			$new_width = $largeur_max; 			$new_height = $largeur_max / $rapport; 		} 		else{			$new_width = $hauteur_max * $rapport; 			$new_height = $hauteur_max ; 		}		$rapport_2 = $new_width / $new_height;		$diff_width = ($new_width - $largeur_max) / $rapport; 		$diff_height = ($new_height - $hauteur_max ) * $rapport; 		if($diff_width>$diff_height){ 			$new_width = $largeur_max; 			$new_height = $largeur_max / $rapport; 		} 		else{			$new_width = $hauteur_max * $rapport; 			$new_height = $hauteur_max ; 		}	}	else if ( $largeur > $largeur_max OR $hauteur > $hauteur_max ){		$rapport = $largeur / $hauteur; 							$diff_width = ($largeur - $largeur_max) / $rapport; 		$diff_height = ($hauteur - $hauteur_max ) * $rapport; 		if($diff_width>$diff_height){ 			$new_width = $largeur_max; 			$new_height = $largeur_max / $rapport; 		} 		else{			$new_width = $hauteur_max * $rapport; 			$new_height = $hauteur_max ; 		} 						}	else{		$new_width = $largeur;		$new_height = $hauteur;	}	// Second passage pour finaliser la correction ;)	if ( $new_width > $largeur_max OR $new_height > $hauteur_max){		$rapport = $new_width / $new_height; 							$diff_width = ($new_width - $largeur_max) / $rapport; 		$diff_height = ($new_height - $hauteur_max ) * $rapport; 		if($diff_width>$diff_height){ 			$new_width = $largeur_max; 			$new_height = $largeur_max / $rapport; 		} 		else{			$new_width = $hauteur_max * $rapport; 			$new_height = $hauteur_max ; 		} 						}	else if ( $new_width > $largeur_max AND $new_height > $hauteur_max){		$rapport = $new_width / $new_height; 							$diff_width = ($new_width - $largeur_max) / $rapport; 		$diff_height = ($new_height - $hauteur_max ) * $rapport; 		if($diff_width>$diff_height){ 			$new_width = $largeur_max; 			$new_height = $largeur_max / $rapport; 		} 		else{			$new_width = $hauteur_max * $rapport; 			$new_height = $hauteur_max ; 		}		$rapport_2 = $new_width / $new_height;		$diff_width = ($new_width - $largeur_max) / $rapport; 		$diff_height = ($new_height - $hauteur_max ) * $rapport; 		if($diff_width>$diff_height){ 			$new_width = $largeur_max; 			$new_height = $largeur_max / $rapport; 		} 		else{			$new_width = $hauteur_max * $rapport; 			$new_height = $hauteur_max ; 		}	}	// Pour que ca affiche quand meme une image ( meme deforme ) si probleme ( notamment avec ie qui fait eternellement ch... ^^ )	if ( $new_width == 0 OR $new_width == '' )$new_width = $largeur_max;	if ( $new_height == 0 OR $new_height == '')$new_height = $hauteur_max;		return array ( $new_width , $new_height );}// Fonction pour afficher et coloriser un script ou la source d'une fichierfunction give_source ( $code = '' , $type = 'file') {	$return = '';	if ( $type == 'file' ){		$code = highlight_file( $code , true);	}	else{		$code =  nl2br ( highlight_string ( $code , true) );	}		if ( substr_count ( $code , '<br />' ) > 1 ){		$code = explode("<br />", $code);	}	else{		$code = explode("\r", $code);	}	$line = 1;	foreach ($code as $ln => $ligne) {		if ( $ligne != '' AND strlen ($ligne) > 0){			//On retire les ligne ne contenant pas de code ;)			$lig = preg_replace ( '!&(amp;)+!isU' , '&' , htmlspecialchars(htmlspecialchars( $ligne ) ) );			$lig = preg_replace ( '!&lt;(.+)?&gt;!isU' , '' , $lig );						if ( strlen ( $lig ) > 1 ){				$return .= $ligne.'<br />';				$line++;			}					}	}		return $return;}//Fonction pour brouiller mail (anti spamm)function codemail($mail) {	$mailcode="";	$longueur = strlen($mail);	// Boucle en fonction de la taille.	for ($x = 0; $x < $longueur; $x++) {		$ord = ord(substr($mail, $x, 1));		$mailcode .= "&#$ord;";	}return $mailcode;}/*FONCTIONS POUR RENDRE LE HTML DU WYSIWYG OPERATIONNEL*/	// Fonction pour mettre le contenu des balises en minuscules (  sauf URL et Source d image ;)	function to_min ($txt ){		$var = $txt[1];		if ( isset ( $txt[2] ) )$var.= $txt[2];		$array = array (		'height=&quot;&quot;',		'width=&quot;&quot;',		'align=&quot;&quot;',		'style=&quot;&quot;',		'class=&quot;&quot;',		'alt=&quot;&quot;' );		foreach ( $array as $arr )$var = str_replace ( $arr , '' , $var );		// On dissocie les liens pour ne pas mettre les URL et Source d'images en minuscule en retirant l'url pendant que l'on convertir en chaine en minuscule		if ( strtolower ( $var{0} ) == 'a' ){									$url = preg_replace ( '!^.*href=&quot;(.+)&quot;.*$!isU' , '$1' , $var); 			$var = str_replace ( $url , 'url$$cut££to@@replace' , $var );						// On vire les & et les = qui seraient bloqués par les regex apres ;)			$url = str_replace ( '&' , 'aNd_fOr_UrL_xx' , $url );			$url = str_replace ( '=' , 'eGaL_fOr_UrL_xx' , $url );						// On convertit la balise en majuscule			$var = strtolower ( $var );						// Puis on remet l'url ;)			$var = str_replace ( 'url$$cut££to@@replace' , $url , $var );				}		else if ( strtolower ( substr ( $var , 0 , 3 ) ) == 'img'  ){			$url = preg_replace ( '!^.*src=&quot;(.+)&quot;.*$!isU' , '$1' , $var); 			$var = str_replace ( $url , 'url$$cut££to@@replace' , $var );						// On vire les & et les = qui seraient bloqués par les regex apres ;)			$url = str_replace ( '&' , 'aNd_fOr_UrL_xx' , $url );			$url = str_replace ( '=' , 'eGaL_fOr_UrL_xx' , $url );						// On convertit la balise en majuscule			$var = strtolower ( $var );						// Puis on remet l'url ;)			$var = str_replace ( 'url$$cut££to@@replace' , $url , $var );					}		else{			$var = strtolower ( $var );		}		$var = '&lt;'.$var.'&gt;';		return $var;	}	// Fonction pour coloration syntaxique des codes	function color_synt ( $txt ){		$text = str_replace ( '<br />' , '@BRX/@' , $txt[1] );		$text = stripslashes ( html_entity_decode ( $text ) );		$text = give_source ( $text	, 'code' );		$text = str_replace ( '@BRX/@' , '<br />' , $text );		return '<code>'.$text.'</code>';	}	function to_html ( $text , $rep = '.', $not_live_edit = true) {				//include_once ( '../../langues/francais/lang.php' );		$text = nl2br ( $text );				$text = str_replace ( '<' , '&lt;' , str_replace ( '>' , '&gt;' , $text ) );		$text = preg_replace ( '!&(amp;)+!isU' , '&' , $text );		$text = str_replace ( '"' , '&quot;' , $text ) ;		$text = preg_replace ( '!\\\&quot;!' , '&quot;' , $text ) ;		$text = str_replace ( '%22' , '', $text);				$text = str_replace ( '%20' , '', $text);						// On convertit le contenu de chaque balise en minuscule		$text = nl2br ( preg_replace_callback ( '!&lt;(.+)?&gt;!isU' , "to_min" , $text ) );				// Si jamais on est en train d'editer un contenu, on ne transforme pas ces balises la !		if ( $not_live_edit ){			/*			SMILEYS			*/			$handle = opendir($rep."/smileys/"); 				while (($file = readdir($handle))!=false) { 											if($file!=".." AND $file!="." AND $file!="Thumbs.db")					{							$bal = substr($file,0,strlen($file)-4);						$bal = preg_replace('!"!' , '\"',$bal);						$text = preg_replace("!:".$bal."!is", '<img src="./smileys/'.$file.'" alt="" border="0" />', $text);					}				}			closedir($handle);					/*				BBCODE Simple			*/			//On remplace les balises vide par rien pour ne pas que ca fasse moche a laffichage ;)			$text = preg_replace ( '!\[size=([0-9]{1,2})\]\[\/size\]!is' , '' , $text ) ;			$text = preg_replace ( '!\[font=[a-zA-Z ]+\]\[/font\]!is' , '' , $text ) ;			$text = preg_replace ( '!\[color=([a-zA-Z]+?)\]\[\/color\]!is' , '' , $text ) ;			// On remplace les img et url par leur egale afin d'afficher les images et les urls ;)			$text = preg_replace ( '!\[img\]((ht|f)tp://)([^\r\n\t<"]*?)\[/img\]!i' , "<img border=\"0\" alt=\"picture\" src=\\1" . str_replace ( ' ' , '%20' , '\\3' )  . " />" , $text ) ;			$text = preg_replace ( '!\[img align=([^\r\n\t<"]*?)\]([^\r\n\t<"]*?)\[/img\]!U' , '<img border=\"0\" align="$1" src="$2" />' , $text ) ;			$text = preg_replace ( '!\[img\]w{3}([^\r\n\t<"]*?)\[/img\]!i' , "<img border=\"0\" alt=\"picture\" src=\"http://www$1\" />" , $text ) ;			$text = preg_replace ( '!\[img\]./([^\r\n\t<"]*?)\[/img\]!i' , "<img border=\"0\" alt=\"picture\" src=\"./$1\" />" , $text ) ;			$text = preg_replace ( '!\[url\]((ht|f)tp://)([^\r\n\t<"]*?)\[/url\]!i' , "<a href=\"\\1" . str_replace ( ' ' , '%20' , '\\3' ) . "\" target=\"blank\">\\1\\3</a>" , $text ) ;			$text = preg_replace ( '!\[url\]w{3}([^\r\n\t<"]*?)\[/url\]!i' , "<a href=\"http://www$1\" target=blank>http://www$1</a>" , $text ) ;			$text = preg_replace ( '!\[url\]./([^\r\n\t<"]*?)\[/url\]!i' , "<a href=\"./$1\">./$1</a>" , $text ) ;			$text = preg_replace ( '!\[url=((ht|f)tp:)/{2}([^\r\n\t<"]*?)\]([^\r\n\t<"]*?)\[/url\]!i' , "<a href=\"http://$3\" target=\"blank\">$4</a>" , $text );			$text = preg_replace ( '!\[url=./([^\r\n\t<"]*?)\]([^\r\n\t<"]*?)\[/url\]!i' , "<a href=\"./$1\">$2</a>" , $text );			$text = preg_replace ( '!\[url=w{3}([^\r\n\t<"]*?)\]([^\r\n\t<"]*?)\[\/url\]!i' , "<a href=\"http://www$1\" target=\"blank\">$2</a>" , $text );			$text = preg_replace ( '!\[url\]([^rnt<"]*?)\[/url\]!i' , "http://$1" , $text ) ;			//Array contenant les balises simples à remplacer			$array = array ( 			'[b]' => '<strong>' ,			'[/b]' => '</strong>' ,			'[s]' => '<strike>' ,			'[/s]' => '</strike>' ,			'[i]' => '<i>' ,			'[/i]' => '</i>' ,			'[u]' => '<u>' ,			'[/u]' => '</u>' ,			'[left]' => '<p align="left">' ,			'[/left]' => '</p>' ,			'[right]' => '<p align="right">' ,			'[/right]' => '</p>' ,			'[center]' => '<p align="center">' , 			'[/center]' => '</p>' ,			'[img][/img]' => '' ,			'[url][/url]' => '' ,			'[b][/b]' => '' ,			'[s][/s]' => '' ,			'[i][/i]' => '' ,			'[u][/u]' => '' ,			'[left][/left]' => '' ,			'[right][/right]' => '' ,			'[center][/center]' => '' ,			'[/size]' => '</span>' ,			'[/font]' => '</font>' ,			'[code]' => '<br /><fieldset id="code"><legend>'.CODE.'</legend><br /><code>' ,			'[/code]' => '</code</div><br />' ,			'[quote]' => '<br /><fieldset id="quote"><legend>'.QUOTE.'</legend><br />' , 			'[/quote]' => '</div><br />' ,			'[/color]' => '</font>' ,			'[code][/code]' => '' ,			'[quote][/quote]' => '' );			//On remplace les balises simples avec str_replace en parcourant l'array.			foreach ( $array as $bal => $html ) $text = str_replace ( $bal , $html , $text ) ;			//Maintenant on remplace les balise d'ouverture complexe à l'aide de preg_replace			$text = preg_replace ( '!\[size=([0-9]{1,2})\]!is' , '<span style="font-size:$1pt">' , $text );			$text = preg_replace ( '!\[font=(Arial|Arial Black|Comic Sans MS|Courier|Courier New|Fixedsys|Franklin Gothic Medium|Georgia|Impact|Lucida Console|Lucida Sans Unicode|MS Sans Serif|MS Serif|Palatino Linotype|Roman|Script|Segoe Media Center|Small Fonts|System|Terminal)\]!is' , '<font face="$1">' , $text );			$text = preg_replace ( '!\[quote=(.+?)\]!is' , "<br /><fieldset id=\"quote\"><legend>".QUOTE_FROM." $1 :</legend><br />" , $text );			$text = preg_replace ( '!\[color=(.+?)\]!is' , "<font color=$1>" , $text );			}				/*			BBCODE AVANCE ( Wisywyg )		*/		// On transforme en html brut, les balises html utilises par le wyziwyg et seulement elles		$text = preg_replace ( '!&lt;object (height=(&quot;)?([^&|>|"]+)?(&quot;)?)?( )?(width=(&quot;)?([^&|>|"]+)?(&quot;)?)?&gt;!isU' , '<object height="$3" width="$8">' , $text );		$text = preg_replace ( '!&lt;object (width=(&quot;)?([^&|>|"]+)?(&quot;)?)?( )?(height=(&quot;)?([^&|>|"]+)?(&quot;)?)?&gt;!isU' , '<object height="$8" width="$3">' , $text );		$text = preg_replace ( '!&lt;param (name=(&quot;)?([^&|>|"]+)?(&quot;)?)?( )?(value=(&quot;)?([^&|>|"]+)?(&quot;)?)?&gt;!isU' , '<param name="$3" value="$8"></param>' , $text );			$text = preg_replace ( '!&lt;div id=(&quot;)?([^&|>|"]+)(&quot)?;&gt;!isU' , '<div id="$2">' , $text );		$text = preg_replace ( '!&lt;legend&gt;(.+)&lt;/legend&gt;!isU' , '<legend>$1</legend>' , $text );				// Video Flash		$text = preg_replace ( '!&lt;embed src=&quot;([^&|>|"]+)&quot; type=&quot;application/x-shockwave-flash&quot; allowfullscreen=&quot;true&quot; height=&quot;([0-9]+)&quot; width=&quot;([0-9]+)&quot;&gt;!isU' , '<embed src="$1" type="application/x-shockwave-flash" allowfullscreen="true" height="$2" width="$3"></embed>' , $text );		$text = preg_replace ( '!&lt;embed src=&quot;([^&|>|"]+)&quot; type=&quot;application/x-shockwave-flash&quot; wmode=&quot;transparent&quot; height=&quot;([0-9]+)&quot; width=&quot;([0-9]+)&quot;&gt;!isU' , '<embed src="$1" type="application/x-shockwave-flash" wmode="transparent" height="$2" width="$3"></embed>' , $text );		$text = preg_replace ( '!&lt;embed src=(&quot;)?([^&|>|"]+)(&quot;)? width=(&quot;)?([0-9]+)(&quot;)? height=(&quot;)?([0-9]+)(&quot;)? type=(&quot;)?application/x-shockwave-flash(&quot;)? allowfullscreen=(&quot;)?true(&quot;)?&gt;!isU' , '<embed src="$2" type="application/x-shockwave-flash" allowfullscreen="true" height="$8" width="$5"></embed>' , $text );		$text = preg_replace ( '!&lt;embed src=(&quot;)?([^&|>|"]+)(&quot;)? width=(&quot;)?([0-9]+)(&quot;)? height=(&quot;)?([0-9]+)(&quot;)? type=(&quot;)?application/x-shockwave-flash(&quot;)? wmode=(&quot;)?transparent(&quot;)?&gt;!isU' , '<embed src="$2" type="application/x-shockwave-flash" wmode="transparent" ="true" height="$8" width="$5"></embed>' , $text );		// Jolies REGEX, on ne peut plus simple ^^		$text = preg_replace ( '!&lt;(br|td|th|tbody|tr|hr|ol|ul|li|p|div|span|strong)( )*(class=(&quot;)?([^&|>|"]+)?(&quot;)?)?( )(style=(&quot;)?([^&|>|"]+)?(&quot;)?)?( )*(width=(&quot;)?([^&|>|"]+)?(&quot;)?)?( )*(height=(&quot;)?([^&|>|"]+)?(&quot;)?)?( )*(align=(&quot;)?([^&|>|"]+)?(&quot;)?)?(class=(&quot;)?([^&|>|"]+)?(&quot;)?)?( )*&gt;!isU' , '<$1 style="$10" width="$15"  height="$20" align="$25" class="$29$5">' , $text );		$text = preg_replace ( '!&lt;font (face=(&quot;)?([^&|>|"]*)?(&quot;)?)?( )?(style=(&quot;)?([^&|>|"]*)?(&quot;)?)?( )?(color=(&quot;)?([a-zA-Z]+)?(&quot;)?)?( )?(size=(&quot;)?([0-9]+)?(&quot;)?)?(&quot;)?&gt;!isU' , '<font face="$3" style="$8" size="$18" color="$13">' , $text );		$text = preg_replace ( '!&lt;font (style=(&quot;)?([^&|>|"]*)?(&quot;)?)?( )?(color=(&quot;)?([^&|>|"]*)?(&quot;)?)?( )?(face=(&quot;)?([a-zA-Z]+)?(&quot;)?)?( )?(size=(&quot;)?([0-9]+)?(&quot;)?)?(&quot;)?&gt;!isU' , '<font face="$13" style="$3" size="$18" color="$8">' , $text );				// Images		$text = preg_replace ( '!&lt;img( )?(style=(&quot;)?([^&|>|"]+)?(&quot;)?)?( )?width=(&quot;)?([0-9]+)(&quot;)?( )?height=(&quot;)?([0-9]+)(&quot;)?( )?(align=(&quot;)?([^&|>|"]+)?(&quot;)?)?( )?(src=(&quot;)?([^&|>|"|=]+)?(&quot;)?)?( )+(alt=(&quot;)?([^&|>|"]+)?(&quot;)?)?( )+&gt;!isU' , '<img border="0" style="$4" width="$8"  height="$12" align="$17" src="$22" alt="$27" />' , $text );		$text = preg_replace ( '!&lt;img( )?(style=(&quot;)?([^&|>|"]+)?(&quot;)?)?( )?width=(&quot;)?([0-9]+)(&quot;)?( )?height=(&quot;)?([0-9]+)(&quot;)?( )?(align=(&quot;)?([^&|>|"]+)?(&quot;)?)?( )?(alt=(&quot)?([^&|>|"]+)?(&quot;)?)?( )?(src=(&quot;)?([^&|>|"|=]+)?(&quot;)?)?( )?&gt;!isU' , '<img border="0" style="$4" width="$8"  height="$12" align="$17" src="$22" alt="$27" />' , $text );		$text = preg_replace ( '!&lt;img( )?height=(&quot;)?([0-9]+)(&quot;)?( )?(alt=(&quot;)?([^&|>|"]+)(&quot;)?)?( )?(src=(&quot;)?([^&|>|"|=]+)?(&quot;)?)?( )?(width=(&quot)?([0-9]+)?(&quot;)?( )?)+&gt;!isU' , '<img border="0" height="$3" src="$13" alt="$8" width="$18"/>' , $text );		$text = preg_replace ( '!&lt;img( )?(style=(&quot;)?([^&|>|"]+)?(&quot;)?)?( )?(src=(&quot;)?([^&|>|"|=]+)?(&quot;)?)?( )?(alt=(&quot;)?([^&|>|"]+)?(&quot;)?)?( )?(align=(&quot;)?([^&|>|"]+)?(&quot;)?)?( )?height=(&quot;)?([0-9]+)(&quot;)?( )?width=(&quot;)([0-9]+)?(&quot;)?( )?/?( )?&gt;!isU' , '<img border="0" style="$4" src="$9" alt="$14" align="$19" height="$23" width="$27" />' , $text );		$text = preg_replace ( '!&lt;img( )?(style=(&quot;)?([^&|>|"]+)?(&quot;)?)?( )?(align=(&quot;)?([^&|>|"]+)?(&quot;)?)?( )?(src=(&quot;)?([^&|>|"|=]+)?(&quot;)?)?( )+(alt=(&quot;)?([^&|>|"]+)?(&quot;)?)?( )+&gt;!isU' , '<img border="0" style="$4" align="$9" src="$14" alt="$19" />' , $text );		$text = preg_replace ( '!&lt;img( )?(style=(&quot;)?([^&|>|"]+)?(&quot;)?)?( )?(align=(&quot;)?([^&|>|"]+)?(&quot;)?)?( )?(alt=(&quot)?([^&|>|"]+)?(&quot;)?)?( )?(src=(&quot;)?([^&|>|"|=]+)?(&quot;)?)?( )?&gt;!isU' , '<img border="0" style="$4" align="$9" src="$19" alt="$14" />' , $text );		$text = preg_replace ( '!&lt;img( )?(style=(&quot;)?([^&|>|"]+)?(&quot;)?)?( )?(src=(&quot;)?([^&|>|"|=]+)?(&quot;)?)?( )?(alt=(&quot;)?([^&|>|"]+)?(&quot;)?)?( )?(align=(&quot;)?([^&|>|"]+)?(&quot;)?)?( )?/?( )?&gt;!isU' , '<img border="0" style="$4" src="$9" alt="$14" align="$19" />' , $text );		$text = preg_replace ( '!&lt;img( )?(style=(&quot;)?([^&|>|"]+)?(&quot;)?)?( )?(src=(&quot;)?([^&|>|"|=]+)?(&quot;)?)?( )?(alt=(&quot;)?([^&|>|"]+)?(&quot;)?)?( )?(align=(&quot;)?([^&|>|"]+)?(&quot;)?)?( )(border=(&quot;)?([0-9]+)?(&quot;)?)?( )?/?( )?&gt;!isU' , '<img border="$24" style="$4" src="$9" alt="$14" align="$19" />' , $text );		$text = preg_replace ( '!&lt;a href="http://zezaeaze.fr"&gt;http://zezaeaze.fr&lt;/a&gt;<br></body>!isU' , 'xXx' , $text );		$text = preg_replace ( '!&lt;a (style=(&quot;)?([^&|>|"]+)?(&quot;)?)?( )?(title=(&quot;)?([^&|>|"]+)?(&quot;)?)?( )?(class=(&quot;)?([^&|>|"]+)?(&quot;)?)?( )?href=(&quot;)?([^&|>|"]+)?(&quot;)?( )?(target=(&quot;)?_?blank(&quot;)?)*( )?&gt;([^>|"]+)?&lt;/a&gt;!isU' , '<a style="$3" title="$8" class="$13" href="$17">$24</a>' , $text );		$text = preg_replace ( '!&lt;font (style=(&quot;)?([^&|>|"]+)?(&quot;)?)?( )?(color=(&quot;)?([a-zA-Z]+)?(&quot;)?)?( )?(size=(&quot;)?([0-9]+)?(&quot;)?)?&gt;!isU' , '<font style="$3" size="$12" color="$8">' , $text );		$text = str_replace ( 'aNd_fOr_UrL_xx' , '&' , $text );		$text = str_replace ( 'eGaL_fOr_UrL_xx' , '=' , $text );				$min_bal = array ( 		'&lt;/span&gt;' => '</span>' , 		'&lt;hr id=null&gt;' => '<hr />' , 		'&lt;blockquote dir=ltr style=&quot;margin-right: 0px&quot;&gt;' => '' , 		'&lt;/blockquote&gt;' => '' , 		'&lt;p align=left&gt;' => '<p align=left>' , 		'&lt;p align=right&gt;' => '<p align=right>' , 		'&lt;p align=center&gt;' => '<p align=center>' , 		'&lt;/div&gt;' => '</div>' , 		'&lt;/font&gt;' => '</font>' , 		'&lt;/ul&gt;' => '</ul>' , 		'&lt;/em&gt;' => '</em>' , 		'&lt;em&gt;' => '<em>' , 		'&lt;/li&gt;' => '</li>' , 		'&lt;/param&gt;' => '' , 		'&lt;/embed&gt;' => '' , 		'&lt;/i&gt;' => '</i>' , 		'&lt;/object&gt;' => '</object>' , 		'&lt;fieldset&gt;' => '<fieldset>' , 		'&lt;b&gt;' => '<b>' , 		'&lt;p&gt;' => '<p>' , 		'&lt;/p&gt;' => '</p>' , 		'&lt;ul&gt;' => '<ul>' , 		'&lt;li&gt;' => '<li>' , 		'&lt;/b&gt;' => '</b>' , 		'&lt;i&gt;' => '<i>' , 		'&lt;em&gt;' => '<em>' , 		'&lt;/em&gt;' => '</em>' , 		'&lt;/ol&gt;' => '</ol>' , 		'&lt;/table&gt;' => '</table>' , 		'&lt;/tbody&gt;' => '</tbody>' , 		'&lt;/tr&gt;' => '</tr>' , 		'&lt;/td&gt;' => '</td>' , 		'&lt;/th&gt;' => '</th>' , 		'&lt;strong&gt;' => '<strong>' , 		'&lt;strike&gt;' => '</strike>' , 		'&lt;/strike&gt;' => '</strike>' , 		'&lt;u&gt;' => '<u>' , 		'&lt;code&gt;' => '<code>' , 		'&lt;/strong&gt;' => '</strong>' , 		'&lt;/u&gt;' => '</u>' , 		'&lt;/code&gt;' => '</code>' , 		'&lt;br&gt;' => '<br />' , 		'&lt;br /&gt;' => '<br />' , 		'&lt;/p&gt;' => '</p>' , 		'&lt;/div&gt;' => '</div>' , 		'&lt;fieldset id=&quot;code&quot;&gt;' => '<fieldset id="code">' ,  		'&lt;fieldset id=&quot;quote&quot;&gt;' => '<fieldset id="quote">' ,  		'&lt;/fieldset&gt;' => '</fieldset>' ,  		'&nbsp;' => ' ' ) ;		foreach ( $min_bal as $min => $new ) $text = str_replace ( $min , $new , $text ) ;				// On retire les surplus de <br> qui peuvent apparaitre		$text = str_replace ( '<br /><br />' , '<br />' , $text ) ;		$text = str_replace ( '<br><br>' , '<br />' , $text ) ;		$text = stripslashes ( $text );		// On desactive le contenu entre les balises code		$text = preg_replace_callback ( '!<code>(.+)?</code>!isU' , "color_synt" , $text ) ;			return $text;	}/**///Fonction pour afficher formulaire qui en fonction du navig, sera un formulaire simple ou bien un formulaire incluant un wysiwygfunction default_form ( $title = FALSE , $title_value = NULL , $contenu = NULL , $height = 200 , $functions = '' , $rep = '.' , $id_div = NULL ){	global $u_theme, $u_lang, $use_wysiwyg;	$title_value = str_replace ( "\r\n" , '' , $title_value );	$contenu = str_replace ( "\r\n" , '' , addslashes ( addslashes ( stripslashes ( $contenu ) ) ) );	$contenu = str_replace ( "\r" , '' , $contenu );	$contenu = str_replace ( "\n" , '' , $contenu );	// On charge l'editeur	$return = '	<script type="text/javascript">			setTimeout("change_editor( '.$height.' , true , \''.$id_div.'\' , \''.$u_lang.'\', '.( ( $use_wysiwyg == 1 ) ? ('false' ) : ('true') ).' );" , 5 );			setTimeout("insert(\''.$contenu.'\' , \''.$id_div.'\');" , 1000 );	</script>';		// On ouvre le fichier de template crée pour retourner le contenu sans l'executer	$contenu = '';	$file = fopen ( $rep.'/themes/'.$u_theme.'/modules/wysiwyg/index.tpl' , 'r' );	while ( !feof ( $file ) ){		$contenu .= fgets ( $file , 4096 );	}	fclose ( $file );		$to_replace = array (	'U_THEME' => $u_theme,	'FONT' => FONT,	'SIZE' => SIZE,	'COLOR' => COLOR,	'BLACK' => BLACK,	'RED' => RED,	'YELLOW' => YELLOW,	'BLUE' => BLUE,	'ORANGE' => ORANGE,	'CYAN' => CYAN,	'GREY' => GREY,	'GREEN' => GREEN,	'TITLE' => title,	'VALID' => valid,	'U_LANG' => $u_lang,	'MULTIPLE_FORM' => $id_div,	'TITLE_VALUE' => $title_value,	'FUNCTIONS' => $functions );		if ( $title === FALSE )		$contenu = preg_replace ( '!<\!-- BEGIN title -->(.+)<\!-- END title -->!isU' , '' , $contenu );		foreach ( $to_replace AS $deb => $aft )$contenu = str_replace ( '{'.$deb.'}' , $aft , $contenu );		$return .= $contenu;	return $return;}//Converti timestamp en timestamp GMT function convertime($temp){	$tab_mois = array("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec");	$num_mois = array("1","2","3","4","5","6","7","8","9","10","11","12");	$i = 0;	$trouve = false;	$temp1 = gmdate("M d Y H i s" , $temp);	$tab = explode(" ",$temp1);	while($i<=11 AND !$trouve){		if($tab_mois[$i]==$tab[0]){			$tab[0] = $num_mois[$i];			$trouve = true;		}		$i++;	}	$temp1 = mktime($tab[3],$tab[4],$tab[5],$tab[0],$tab[1],$tab[2]);	$temp2 = gmdate("M d Y H i s" , $temp1);return $temp1;}//Converti timestamp GMT en timestamp compatible ac fuseaux de l'userfunction ccmsdate($fuseaux,$heure){	global $format_date;		$jour = date("d", $heure);	$mois = date("M" , $heure);	$annee = date("Y" ,$heure);	$minute = date("i", $heure);	$heure = date("H" ,$heure);	$seconde = date("s" ,$heure);	$mois_fu = $mois;	$tab_mois = array("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec");	$num_mois = array("1","2","3","4","5","6","7","8","9","10","11","12");	$i = 0;	$trouve = false;	while($i<=11 AND !$trouve){		if($tab_mois[$i]==$mois_fu){			$mois_fu = $num_mois[$i];			$trouve = true;		}		$i++;	}	$heure_fu = $heure + $fuseaux;	$jour_fu = $jour;	$annee_fu = $annee;	if($heure_fu >= 24){		$heure_fu = $heure_fu -24;		$jour_fu = $jour + 1;		if($jour_fu<10){			$jour_fu = '0'.$jour_fu;		}	}	else if($heure_fu < 0){		$heure_fu = $heure_fu +24;		$jour_fu = $jour -1;		if($jour_fu<10){			$jour_fu='0'.$jour_fu;		}	}	if($jour_fu>31){		$jour_fu = 01;		$mois_fu = $mois_fu +1;	}	if($mois_fu ==2){		if($annee_fu/4 == intval($annee_fu/4) AND ($annee_fu/100 != intval($annee_fu/100) OR $annee_fu/400 == intval($annee_fu/400))){			if($jour_fu > 29){				$jour_fu = 01;				$mois_fu = $mois_fu +1;			}		}		else{			if($jour_fu > 28){				$jour_fu = 01;				$mois_fu = $mois_fu +1;			}		}	}	else if($mois_fu==4 OR $mois_fu==6 OR $mois_fu==9 OR $mois_fu==11){		if($jour_fu>30){			$jour_fu = 01;			$mois_fu = $mois_fu +1;		}	}	if($mois_fu<10)		$mois_fu ='0'.$mois_fu;				$var = '';				//On recupere le format de date de l'utilisateur		$format = explode ( ' ' , $format_date );				//On recupere la longueur de la chaine contenant la syntaxe de la date pour la desosser par la suite		$size = strlen ( $format[0] ) - 1;		for ( $i = 0 ; $i <= $size ; $i++ ){			$lettre_actuelle = $format[0]{$i};			if ( $lettre_actuelle == 'd'){				$var .= $jour_fu;			}			else if ( $lettre_actuelle == 'm'){				$var .= $mois_fu;			}			else if ( $lettre_actuelle == 'y'){				$var .= $annee_fu;			}			else {				$var .= $lettre_actuelle;			}		}				$var .= ' '.str_replace ( '+esp;' , ' ' , $format[1] ).' ';				$type_hour = substr ( $format[2] , 0 , 2 );		//On regarde le format de date ( 24h ou 12(am/pm) )		if ( $type_hour == 24 ){			$var .= $heure_fu.$format[2] { ( strlen ( $format[2] ) - 1 ) }.$minute;		}		else{			if ( $heure_fu >= 12 ){				$heure_fu = $heure_fu - 12;				$var .= $heure_fu.$format[2] { ( strlen ( $format[2] ) - 1 ) }.$minute.' pm';			}			else{				$var .= $heure_fu.$format[2] { ( strlen ( $format[2] ) - 1 ) }.$minute.' am';			}		}	return $var;}function Timegen ($micro1, $micro2){	list ($mic1, $time1) = explode(' ', $micro1);	list ($mic2, $time2) = explode(' ', $micro2);		$time = $time2 - $time1;	$micro = $mic2 - $mic1;	$micro += $time;		return $micro;}function colorNiveau($niveau,$pseudo){global $color_level_0,$color_level_1,$color_level_2;	switch($niveau){		case 0 :			return '<span style="color:'.$color_level_0.'">'.$pseudo.'</span>';		case 1 :			return '<span style="color:'.$color_level_1.'">'.$pseudo.' ('.vip.')</span>';		case 2:			return '<span style="color:'.$color_level_2.'">'.$pseudo.' ('.fondateur.')</span>';			}}function verifGroupe($verif_grp){	global $groupe;			if(ereg($verif_grp.";",$groupe)){			return TRUE;		}		else{			return FALSE;		}}function recupGroupe($id){	global $Bdd;	$req = $Bdd->sql('SELECT '.PT.'_users.groupe FROM '.PT.'_users WHERE id="'.$id.'"' );	$rep = $Bdd->get_object($req);	$groupe_u = $rep->groupe;	return $groupe_u;}function comparGroup($groupe_verif,$groupe_user){	if(ereg($groupe_verif.";",$groupe_user)){		return TRUE;	}	else{		return FALSE;	}}function getSymbole($grade,$pseudo){	global $symb1,$symb2,$symb3,$symb4;	$ver = ${'symb'.$grade};	if($ver != ''){		$decomp = explode(';',$ver);			if($decomp[0]==''){				return '<span style="color:'.$decomp[1].'">'.$pseudo.'</span>';			}			else if($decomp[1]==''){				return $decomp[0].$pseudo;			}			else{				return '<span style="color:'.$decomp[1].'">'.$decomp[0].$pseudo.'</span>';			}	}	else{			return $pseudo;		}}?>