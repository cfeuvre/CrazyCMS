<?php/*Copyright CrazyCMS : Valmori Quentin	quentin.valmori@gmail.comFeuvre Christophe	neowan@live.frHaustrate Kevin	gippel5@hotmail.comThis software is a computer program whose purpose is to make our own website. You just have to follow the automatic installation procedureand you website is operational. Moreover, He is securized and optimized as much as possible.This software is governed by the CeCILL² license under French law andabiding by the rules of distribution of free software.  You can  use, modify and/ or redistribute the software under the terms of the CeCILL²license as circulated by CEA, CNRS and INRIA at the following URL"http://www.cecill.info". The fact that you are presently reading this means that you have hadknowledge of the CeCILL² license and that you accept its terms.*/if(!defined('CCMS'))die('' );$arr = explode(',',$god_user);if ( $grade == 4 && in_array ( $uid , $arr ) ){	$template->set_filename ( 'haut_mods.tpl' );	$template->set_filename ( './modules/admin/sql.tpl' );	if(isset($_GET['opti'])){		$logs->add_event ( HAS_OPTIMIZED_BDD , SQL );			$template->assign_block_vars ( 'mod_titre' , array (		'TITRE' => OPTIMIZE ) );		$template->assign_block_vars ( 'opti' , array (		'BDD_OPTIMIZED_IN' => BDD_OPTIMIZED_IN,		'SECONDS' => SECONDS,		'BACK' => back ) );				$query_start = str_replace(' '.time(),'',microtime());		$queryoptimise = $Bdd->sql('SHOW TABLES' );		$a = 0;		while($query = $Bdd->get_array($queryoptimise)){			foreach($query as $key => $val){				$Bdd->sql('OPTIMIZE TABLE '.$val.'' );				$Bdd->sql('REPAIR TABLE '.$val.'' );				$template->assign_block_vars ( 'opti.tb' , array (				'THE_TABLE' => THE_TABLE,				'NAME' => $val,				'HAS_BEEN_OPTIMIZED' => HAS_BEEN_OPTIMIZED ) );			}		}		$Bdd->sql('DELETE FROM '.PT.'_parametres WHERE nom REGEXP"register:(.+)+" ' );		$query_end = str_replace(' '.time(),'',microtime());		$time = $query_end - $query_start;		$template->assign_block_vars ( 'opti.time' , array ( 'VALUE' => round ( $time , 2 ) ) );		}	else if(isset($_GET['admin_sql'])){		$template->assign_block_vars ( 'mod_titre' , array (		'TITRE' => SQL_MANAGING ) );		if(isset($_GET['view'])){					if(isset($_POST['field_name'])){				if($_POST['size']=='' || $_POST['size']==0){					$size = '';				}				else{					$size = '( '.htmlspecialchars($_POST['size'],ENT_QUOTES).' )';				}				$Bdd -> SQL('ALTER TABLE '.htmlspecialchars(base64_decode($_GET['view']),ENT_QUOTES).' ADD '.htmlspecialchars($_POST['field_name'],ENT_QUOTES).' '.htmlspecialchars($_POST['type'],ENT_QUOTES).' '.$size.' NOT NULL AFTER '.htmlspecialchars($_POST['locate'],ENT_QUOTES).' ;' );						}						if(isset($_GET['del'])){				$Bdd->sql('ALTER TABLE '.htmlspecialchars(base64_decode($_GET['view']),ENT_QUOTES).' DROP '.htmlspecialchars(base64_decode($_GET['del']),ENT_QUOTES).'' );			}						$template->assign_block_vars ( 'view' , array (			'BACK' => back,			'VALID' => valid,			'TYPE' => TYPE,			'DEFAULT' => DEFAULT_NAME,			'EXTRA' => EXTRA,			'DELETE' => DELETE,			'ADD_FIELD' => ADD_FIELD,			'NAME' => NAME,			'SIZE' => SIZE,			'PLACED_AFTER' => PLACED_AFTER ) );						$select = '';			$qy = $Bdd->sql('SHOW COLUMNS FROM '.htmlspecialchars(base64_decode($_GET['view']),ENT_QUOTES).'' );			while($qs = $Bdd->get_array($qy)){				$template->assign_block_vars ( 'view.select' , array ( 'NAME' => $qs['Field'] ) );				$template->assign_block_vars ( 'view.field' , array (				'NAME' => $qs['Field'],				'TYPE' => $qs['Type'],				'DEFAULT' => $qs['Default'],				'EXTRA' => $qs['Extra'],				'URL' => 'index.php?mods=admin&amp;page=sql&amp;admin_sql&amp;view='.htmlspecialchars($_GET['view'],ENT_QUOTES).'&amp;del='.base64_encode($qs['Field']),				'DELETE' => DELETE ) );			}		}		else if(isset($_GET['delyes'])){			if ( isset ( $_COOKIE['del_table'] ) AND $_COOKIE['del_table'] == $_GET['delyes'].'x'.$user_password ){				$logs->add_event ( HAS_DELETED_TABLE , SQL );							$Bdd -> SQL ('DROP TABLE '.htmlspecialchars(base64_decode($_GET['delyes']),ENT_QUOTES).'' );				$template->assign_block_vars ( 'text' , array (				'TXT' => TABLE_SUCCESSFULLY_DELETED,				'URL' => 'index.php?mods=admin&amp;page=sql&amp;admin_sql',				'BACK' => back ) );					setcookie ( 'del_table' , '' , time()-40 );			}			else{				header ( 'Location: index.php' );				die ( 'X' );			}				}		else if(isset($_GET['del'])){			setcookie ( 'del_table' , $_GET['del'].'x'.$user_password , time()+600 );			$template->assign_block_vars ( 'confirm' , array (			'TXT' => ARE_YOU_SURE_TO_DEL,			'TABLE' => htmlspecialchars ( base64_decode ( $_GET['del'] ) , ENT_QUOTES ),			'COLOR' => ( ( substr ( htmlspecialchars(base64_decode($_GET['del']),ENT_QUOTES) , 0 , strlen ( PT ) + 1 ) == PT.'_' ) ? ('red') : ('green') ),			'WARNING' => ( ( substr ( htmlspecialchars(base64_decode($_GET['del']),ENT_QUOTES) , 0 , strlen ( PT ) + 1 ) == PT.'_' ) ? ( WARNING ) : ( NO_WARNING ) ),			'CONF_URL' =>'index.php?mods=admin&amp;page=sql&amp;admin_sql&delyes='.htmlspecialchars ( $_GET['del'] , ENT_QUOTES ),			'CONF_TXT' => DELETE,			'BACK_URL' => 'index.php?mods=admin&amp;page=sql&amp;admin_sql',			'BACK' => back ) );				}		else if(isset($_GET['vidyes'])){			if ( isset ( $_COOKIE['vid_table'] ) AND $_COOKIE['vid_table'] == $_GET['vidyes'].'x'.$user_password ){				$logs->add_event ( HAS_TRUNCATED_TABLE , SQL );				$Bdd -> sql ('TRUNCATE TABLE '.htmlspecialchars(base64_decode($_GET['vidyes']),ENT_QUOTES).'' );								$template->assign_block_vars ( 'text' , array (				'TXT' => TABLE_SUCCESSFULLY_EMPTIED,				'URL' => 'index.php?mods=admin&amp;page=sql&amp;admin_sql',				'BACK' => back ) );					setcookie('vid_table' , '' , time()-665 );			}			else{				header ( 'Location: index.php' );				die ( 'X' );			}		}		else if(isset($_GET['vid'])){			setcookie ( 'vid_table' , $_GET['vid'].'x'.$user_password , time()+600 );			$template->assign_block_vars ( 'confirm' , array (			'TXT' => ARE_YOU_SURE_TO_EMPTIE,			'TABLE' => htmlspecialchars ( base64_decode ( $_GET['vid'] ) , ENT_QUOTES ),			'COLOR' => ( ( substr ( htmlspecialchars(base64_decode($_GET['vid']),ENT_QUOTES) , 0 , strlen ( PT ) + 1 ) == PT.'_' ) ? ('red') : ('green') ),			'WARNING' => ( ( substr ( htmlspecialchars(base64_decode($_GET['vid']),ENT_QUOTES) , 0 , strlen ( PT ) + 1 ) == PT.'_' ) ? ( WARNING ) : ( NO_WARNING ) ),			'CONF_URL' =>'index.php?mods=admin&amp;page=sql&amp;admin_sql&vidyes='.htmlspecialchars ( $_GET['vid'] , ENT_QUOTES ),			'CONF_TXT' => EMPTY_TB,			'BACK_URL' => 'index.php?mods=admin&amp;page=sql&amp;admin_sql',			'BACK' => back ) );			}		else if(isset($_GET['export'])){					$table = htmlspecialchars(base64_decode($_GET['export']),ENT_QUOTES);			$export = '-- CrazyCMS : Exportation MySQL<br />-- Exporté le '.date('d\/m\/Y \a h\:i',time()).' ( Heure du Serveur )<br /><br />';			if ( htmlspecialchars ( $_GET['export'] , ENT_QUOTES ) == 'all'){							if(isset($_POST['export'])){									$logs->add_event ( HAS_EXPORTED_TABLE , SQL );								$tbs = $Bdd->sql('SHOW TABLES' );								while($qtb = $Bdd->get_array($tbs)){										foreach($qtb as $base => $table){													if(isset($_POST['table_'.$table]) && $_POST['table_'.$table]=='1')							{											// On recupere la structure de la table								$export .= '<br />-- Structure de la table '.$table.'<br /><br />								CREATE TABLE '.$table.' (';								$fields = array();								$qy = $Bdd->sql('SHOW COLUMNS FROM '.$table.'' );								while($qs = $Bdd->get_array($qy)){									if($qs['Key']=='PRI')$primary = $qs['Field'];									$export .= '<br />'.htmlspecialchars($qs['Field'], ENT_QUOTES).' '.htmlspecialchars($qs['Type'], ENT_QUOTES).' NOT NULL '.( ($qs['Default']!='') ? ('default \''.htmlspecialchars($qs['Default'], ENT_QUOTES).'\'') : ('')).' '.( ($qs['Extra']!='') ? (htmlspecialchars($qs['Extra'], ENT_QUOTES)) : ('')).' ,';								}								$export .= '<br />PRIMARY KEY ('.$primary.') );';											// On recupere le contenu de la table								$export .= '<br /><br />-- Contenu de la table '.htmlspecialchars($table, ENT_QUOTES).'<br /><br />';								$query = $Bdd->sql('SELECT * FROM '.$table);								while($sql = $Bdd->get_array($query)){									$export .= 'INSERT INTO '.htmlspecialchars($table, ENT_QUOTES).' VALUES (';									$a = true;									foreach ($sql as $tble => $valeur){										if(!$a)$export .= ' , ';										$export .= '"'.htmlspecialchars($valeur, ENT_QUOTES).'"';										$a = false;									}									$export .= ' );<br />';								}							}						}					}								$template->assign_block_vars ( 'export' , array (					'EXP' => $export,					'BACK' => back ) );				}				else{					$template->assign_block_vars ( 'export_form' , array (					'JS' => '					<script type="text/javascript">						<!--							function change ( id ){								if ( document.getElementById( id ).checked == true ){									document.getElementById( id ).checked = false;								}								else{									document.getElementById( id ).checked = true;								}							}						-->					</script>',					'CHOOSE_TABLE' => CHOOSE_TABLE,					'VALID' => valid,					'BACK' => back ) );					$tbs = $Bdd->sql('SHOW TABLES' );							while($qtb = $Bdd->get_array($tbs)){						foreach($qtb as $base => $table){							$template->assign_block_vars ( 'export_form.table' , array ( 'TABLE' => $table ) );						}					}				}			}			else{							// On recupere la structure de la table				$export .= '-- Structure de la table '.$table.'<br /><br />				CREATE TABLE '.$table.' (';				$fields = array();				$qy = $Bdd->sql('SHOW COLUMNS FROM '.$table.'' );					while($qs = $Bdd->get_array($qy)){						if($qs['Key']=='PRI')$primary = $qs['Field'];						$export .= '<br />'.htmlspecialchars($qs['Field'], ENT_QUOTES).' '.htmlspecialchars($qs['Type'], ENT_QUOTES).' NOT NULL '.( ($qs['Default']!='') ? ('default \''.htmlspecialchars($qs['Default'], ENT_QUOTES).'\'') : ('')).' '.( ($qs['Extra']!='') ? (htmlspecialchars($qs['Extra'], ENT_QUOTES)) : ('')).' ,';					}				$export .= '<br />PRIMARY KEY ('.$primary.') );';							// On recupere le contenu de la table				$export .= '<br /><br />-- Contenu de la table '.$table.'<br /><br />';				$query = $Bdd->sql('SELECT * FROM '.$table);				while($sql = $Bdd->get_array($query)){					$export .= 'INSERT INTO '.htmlspecialchars($table, ENT_QUOTES).' VALUES (';					$a = true;					foreach ($sql as $tble => $valeur){						if(!$a)$export .= ' , ';						$export .= '"'.htmlspecialchars($valeur, ENT_QUOTES).'"';						$a = false;					}					$export .= ' );<br />';				}							$template->assign_block_vars ( 'export' , array (				'EXP' => $export,				'BACK' => back ) );			}		}		else if(isset($_GET['print'])){					if(isset($_GET['deld'])){							$query = 'DELETE FROM '.htmlspecialchars(base64_decode($_GET['print']),ENT_QUOTES).' WHERE';								$logs->add_event ( HAS_DELETED_ROW , SQL );								$to_del = htmlspecialchars($_GET['deld'],ENT_QUOTES);				$to_del = explode(';-;',$to_del);				$a = 0;				foreach($to_del as $cond){					if($cond != ''){						$cond = explode(':-:',$cond);						$champs = htmlspecialchars(base64_decode($cond[0]),ENT_QUOTES);						$content = htmlspecialchars(base64_decode($cond[1]),ENT_QUOTES);						if($a>0){							$query .= ' AND ';						}						$query .= ' '.$champs.' = "'.$content.'"';					}					$a ++;				}								$Bdd->sql($query);							}						if(isset($_GET['modd'])){							if(isset($_POST['added'])){									$logs->add_event ( HAS_UPDATED_ROW , SQL );									$fields = array();					$qy = $Bdd->sql('SHOW COLUMNS FROM '.htmlspecialchars(base64_decode($_GET['print']),ENT_QUOTES).'' );					while($qs = $Bdd->get_array($qy)){						$fields[] = $qs['Field'];					}										$query = 'UPDATE '.htmlspecialchars(base64_decode($_GET['print']),ENT_QUOTES).' SET ';					$a = 0;					foreach($fields as $fl){						if($fl!=''){							if($a>0)$query .= ', ';							$query .= $fl.' = "'.$Bdd->secure ( $_POST[$fl] ).'"';						}						$a ++;					}										$query .= ' WHERE ';									$fl = explode(';-;',htmlspecialchars($_GET['modd'],ENT_QUOTES));					$fld = explode(':-:',$fl[0]);					$query .= htmlspecialchars ( base64_decode ( $fld[0] ) , ENT_QUOTES ).' = "'.$Bdd->secure ( base64_decode ( $fld[1] ) ).'" ';											$Bdd->sql($query);										$template->assign_block_vars ( 'text' , array (					'TXT' => LINE_SUCCESSFULLY_UPDATED,					'URL' => 'index.php?mods=admin&amp;page=sql&amp;admin_sql&amp;print='.htmlspecialchars($_GET['print'],ENT_QUOTES),					'BACK' => back ) );				}				else{									$fields = array();					$fl = explode(';-;',htmlspecialchars($_GET['modd'],ENT_QUOTES));										foreach ( $fl as $fld ){						if($fld !=''){							$fld = explode(':-:',$fld);							$fields[$fld[0]] = $fld[1].'::--::'.htmlspecialchars(base64_decode($fld[2]),ENT_QUOTES);						}					}					$template->assign_block_vars ( 'line_form' , array (					'VALID' => valid,					'BACK_URL' => 'index.php?mods=admin&amp;page=sql&amp;admin_sql&amp;print='.htmlspecialchars ( $_GET [ 'print' ] ),					'BACK' => back ) );					foreach($fields as $nom => $contenu){						if($nom != ''){							$template->assign_block_vars ( 'line_form.col' , array (							'NAME' => htmlspecialchars ( base64_decode ( $nom ) , ENT_QUOTES ) ) );														$sct = explode('::--::',$contenu);														$str = strtolower($sct[1]);							$str = str_replace ( 'unsigned' , '' , preg_replace('![0-9() ]!' , '',$str) );							if($str == 'tinyint' || $str == 'int' || $str == 'bigint' || $str == 'mediumint' || $str == 'smallint' || $str == 'date' || $str == 'float' || $str == 'double' || $str == 'decimal' || $str == 'datetime' || $str == 'timestamp' || $str == 'time' || $str == 'year' || $str == 'binary' || $str == 'varbinary'){								$template->assign_block_vars ( 'line_form.col.input' , array (								'NAME' => stripslashes ( stripslashes ( $Bdd->secure ( base64_decode ( $nom ) ) ) ),								'VALUE' => stripslashes ( stripslashes ( $Bdd->secure (base64_decode($sct[0] ) ) ) ) ) );							}							else{								$template->assign_block_vars ( 'line_form.col.textarea' , array (								'NAME' => stripslashes ( stripslashes ( $Bdd->secure ( base64_decode ( $nom ) ) ) ),								'VALUE' => stripslashes ( stripslashes ( $Bdd->secure (base64_decode($sct[0] ) ) ) ) ) );							}						}					}				}			}			else if(isset($_GET['insert'])){							if(isset($_POST['added'])){									$logs->add_event ( HAS_ADDED_ROW , SQL );										$fields = array();					$qy = $Bdd->sql('SHOW COLUMNS FROM '.htmlspecialchars(base64_decode($_GET['print']),ENT_QUOTES).'' );					while($qs = $Bdd->get_array($qy)){						$fields[] = $qs['Field'];					}										$query = 'INSERT INTO '.htmlspecialchars(base64_decode($_GET['print']),ENT_QUOTES).' VALUES ( ';					$a = 0;					foreach($fields as $fl){						if($fl!=''){							if($a>0)$query .= ', ';							$query .= '"'.htmlspecialchars($_POST[$fl],ENT_QUOTES).'"';						}						$a ++;					}										$query .= ')';										$Bdd-> sql($query);										$template->assign_block_vars ( 'text' , array (					'TXT' => LINE_SUCCESSFULLY_INSERTED,					'URL' => 'index.php?mods=admin&amp;page=sql&amp;admin_sql&amp;print='.htmlspecialchars($_GET['print'],ENT_QUOTES),					'BACK' => back ) );				}				else{								$fields = array();					$qy = $Bdd->sql('SHOW COLUMNS FROM '.htmlspecialchars(base64_decode($_GET['print']),ENT_QUOTES).'' );					while($qs = $Bdd->get_array($qy)){						$fields[] = base64_encode($qs['Field']).'-*-'.$qs['Type'];					}										$template->assign_block_vars ( 'line_form' , array (					'VALID' => valid,					'BACK_URL' => 'index.php?mods=admin&amp;page=sql&amp;admin_sql&amp;print='.htmlspecialchars ( $_GET [ 'print' ] ),					'BACK' => back ) );										foreach($fields as $fl){						if($fl != ''){							$template->assign_block_vars ( 'line_form.col' , array (							'NAME' => htmlspecialchars ( base64_decode ( $fl[0] ) , ENT_QUOTES ) ) );							$fl = explode('-*-',$fl);															$str = strtolower($fl[1]);							$str = preg_replace('![0-9() ]!' , '',$str);							if($str == 'tinyint' || $str == 'int' || $str == 'bigint' || $str == 'mediumint' || $str == 'smallint' || $str == 'date' || $str == 'float' || $str == 'double' || $str == 'decimal' || $str == 'datetime' || $str == 'timestamp' || $str == 'time' || $str == 'year' || $str == 'binary' || $str == 'varbinary'){								$template->assign_block_vars ( 'line_form.col.input' , array (								'NAME' => stripslashes ( stripslashes ( $Bdd->secure ( base64_decode ( $fl[0] ) ) ) ),								'VALUE' => '' ) );							}							else{								$template->assign_block_vars ( 'line_form.col.textarea' , array (								'NAME' => stripslashes ( stripslashes ( $Bdd->secure ( base64_decode ( $fl[0] ) ) ) ),								'VALUE' => '' ) );							}						}					}				}			}			else{				$fields = array();				$qy = $Bdd->sql('SHOW COLUMNS FROM '.htmlspecialchars(base64_decode($_GET['print']),ENT_QUOTES).'' );				while($qs = $Bdd->get_array($qy)){					$fields[$qs['Field']] = $qs['Type'];				}								$template->assign_block_vars ( 'print_bdd' , array (				'INSERT_URL' => 'index.php?mods=admin&amp;page=sql&amp;admin_sql&amp;print='.htmlspecialchars($_GET['print'],ENT_QUOTES).'&amp;insert',				'INSERT_NEW_LINE' => INSERT_NEW_LINE,				'DELETE' => DELETE,				'MODIFY' => modify,				'BACK' => back ) );				foreach($fields as $field => $type){					$template->assign_block_vars ( 'print_bdd.field' , array (					'FIELD' => $field,					'TYPE' => $type ) );				}								$query = $Bdd->sql('SELECT * FROM '.htmlspecialchars(base64_decode($_GET['print']),ENT_QUOTES).'' );				while($sql = $Bdd->get_array($query)){									$urlo = '';									foreach($fields as $field => $type){						$urlo .= base64_encode($field).':-:'.base64_encode($sql[$field]).':-:'.base64_encode($type).';-;';					}									$template->assign_block_vars ( 'print_bdd.line' , array (					'DEL_URL' => 'index.php?mods=admin&amp;page=sql&amp;admin_sql&amp;print='.htmlspecialchars($_GET['print'],ENT_QUOTES).'&amp;deld='.$urlo,					'MOD_URL' => 'index.php?mods=admin&amp;page=sql&amp;admin_sql&amp;print='.htmlspecialchars($_GET['print'],ENT_QUOTES).'&amp;modd='.$urlo,					'MODIFY' => modify,					'DELETE' => DELETE ) );										foreach($fields as $field => $type){						$template->assign_block_vars ( 'print_bdd.line.col' , array (						'VALUE' => htmlspecialchars ( stripslashes ( substr ( preg_replace ( '!<(.+)>!iU' , '' , $sql [ $field ] ) , 0 , 25 ) ) ) ) );					}				}			}		}		else if(isset($_POST['sql_query'])){			$query = $_POST['sql_query'];			// On retire les commentaires qui peuvent se trouver dans la requetes :			$query = preg_replace('!--(.+)!' , '',$query);			$querys = explode(';',$query);			foreach ( $querys as $query ){				if ( ereg ( '[a-zA-Z0-9]' , $query ) ){					if ( ereg ('^[^a-zA-Z]*SELECT',$query ) ){						$uquery = $Bdd->sql ( stripslashes ( $query ) );						$a = false;												$template->set_filename ( 'sql_query' , array ( 'QUERY' => $query ) );												while ( $sql = $Bdd->get_array ( $uquery ) ){							if ( !$a ){								foreach($sql as $field => $value){									$template->assign_block_vars ( 'sql_query.field' , array ( 'NAME' => $field ) );								}							}							$template->assign_block_vars ( 'sql_query.row' , array() );							foreach ( $sql as $field => $value){								$template->assign_block_vars ( 'sql_query.row.col' , array ( 'NAME' => htmlspecialchars ( $value ) ) );							}														$a = true;						}					}					else{												$logs->add_event ( HAS_EXECUTED_QUERY , SQL );						if ( mysql_query($query) ){							$retour = QUERY_DONE;						}						else{							$retour = mysql_error().' > '.$query;						}						$template->assign_block_vars ( 'text' , array (						'TXT' => $retour,						'URL' => './index.php?mods=admin&page=sql&admin_sql',						'BACK' => back ) );					}				}			}		}		else{			if(isset($_POST['table'])){							$template->assign_block_vars ( 'add_form' , array (				'ADD_THE_TABLE' => ADD_THE_TABLE,				'TABLE' => htmlspecialchars ( $_POST['table'] , ENT_QUOTES ),				'FIELD_NB' => intval ( $_POST['nb_fl'] ) ,				'NAME' => NAME,				'TYPE' => TYPE,				'SIZE' => SIZE,				'DEFAULT' => DEFAULT_NAME,				'EXTRA' => EXTRA,				'VALID' => valid ) );				$a = 1;								while($a <= intval($_POST['nb_fl'])){					$template->assign_block_vars ( 'add_form.field' , array ( 'NB' => $a ) );					$a ++;				}			}			else if(isset($_POST['table_add'])){							$logs->add_event ( HAS_ADDED_TABLE , SQL );								$query = 'CREATE TABLE '.htmlspecialchars($_POST['table_add'],ENT_QUOTES).' (';								$a = 1;				$index = '';				while($a <= intval($_POST['table_nbr'])){									$name = htmlspecialchars($_POST['field_name_'.$a],ENT_QUOTES);					$type = htmlspecialchars($_POST['type_'.$a],ENT_QUOTES);					$size = htmlspecialchars($_POST['size_'.$a],ENT_QUOTES);					if($size == 0 || $size == ''){						$size = '';					}					else{						$size = '( '.$size.' )';					}					$default = htmlspecialchars($_POST['default_'.$a],ENT_QUOTES);					if($default != ''){						$default = 'DEFAULT "'.$default.'"';					}					if($index != ''){						$extra = '';					}					else{						$extra = htmlspecialchars($_POST['extra_'.$a],ENT_QUOTES);					}					if($extra == 'auto_increment'){						$index = 'INDEX ( '.$name.' )';					}										$query .= ' '.$name.' '.$type.' '.$size.' NOT NULL '.$default.' '.$extra.' , ';										$a++;				}				if ( $index == '' )					$query = substr ( $query , 0 , strlen ( $query ) - 2 ).' ) ';				else					$query .= $index.' )';								$Bdd->sql($query);								$template->assign_block_vars ( 'text' , array (				'TXT' => TABLE_SUCCESSFULLY_CREATED,				'URL' => 'index.php?mods=admin&amp;page=sql&amp;admin_sql',				'BACK' => back ) );							}			else{							$template->assign_block_vars ( 'manage' , array (				'TABLE' => TABLE,				'STRUCTURE' => STRUCTURE,				'PRINT' => PRINT_TB,				'EMPTY' => EMPTY_TB,				'EXPORT' => EXPORT,				'DELETE' => DELETE,				'ADD_TABLE' => ADD_TABLE,				'TABLE_NAME' => TABLE_NAME,				'FIELD_NBR' => FIELD_NBR,				'VALID' => valid,				'DO_QUERY' => DO_QUERY,				'BACK' => back ) );				$query = $Bdd->sql('SHOW TABLES' );				$a = 0;				while($sql = $Bdd->get_array($query)){					foreach($sql as $key => $val){					$template->assign_block_vars ( 'manage.tb' , array(					'COLOR' => ( ( substr ( $val , 0 , strlen ( PT ) + 1 ) == PT.'_' ) ? ('red') : ('green') ),					'NAME' => $val,					'HREF1' => 'index.php?mods=admin&amp;page=sql&amp;admin_sql&amp;view='.base64_encode($val),					'STRUCTURE' => STRUCTURE,					'HREF2' => 'index.php?mods=admin&amp;page=sql&amp;admin_sql&amp;print='.base64_encode($val),					'PRINT' => PRINT_TB,					'HREF3' => 'index.php?mods=admin&amp;page=sql&amp;admin_sql&amp;vid='.base64_encode($val),					'EMPTY' => EMPTY_TB,					'HREF4' => 'index.php?mods=admin&amp;page=sql&amp;admin_sql&amp;export='.base64_encode($val),					'EXPORT' => EXPORT,					'HREF5' => 'index.php?mods=admin&amp;page=sql&amp;admin_sql&amp;del='.base64_encode($val),					'DELETE' => DELETE ) );						}				}			}		}	}	else{		$template->assign_block_vars ( 'mod_titre' , array (		'TITRE' => SQL_MANAGING ) );		$template->assign_block_vars ( 'index' , array (		'OPTIMIZE_ALL_TABLE' => OPTIMIZE_ALL_TABLE,		'MANAGE_BDD' => MANAGE_BDD,		'EXPORT_BDD' => EXPORT_BDD,		'BACK' => back ) );	}	$template->set_filename ( 'bas_mods.tpl' );}else{	// Si l'utilisateur n'a rien a faire la, on lui dit ;)	$template->set_filename('error_page.tpl' );	$template->assign_vars ( array ( 'ACCESS_UNAUTHORIZED' => ACCESS_UNAUTHORIZED ) );}?>