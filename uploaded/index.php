<?php/*Copyright CrazyCMS : Valmori Quentin	quentin.valmori@gmail.comFeuvre Christophe	neowan@live.frHaustrate Kevin	gippel5@hotmail.comThis software is a computer program whose purpose is to make our own website. You just have to follow the automatic installation procedureand you website is operational. Moreover, He is securized and optimized as much as possible.This software is governed by the CeCILL² license under French law andabiding by the rules of distribution of free software.  You can  use, modify and/ or redistribute the software under the terms of the CeCILL²license as circulated by CEA, CNRS and INRIA at the following URL"http://www.cecill.info". The fact that you are presently reading this means that you have hadknowledge of the CeCILL² license and that you accept its terms.*/ob_start( 'gz_handler' ); //Modification url pour w3cini_set("arg_separator.output","&amp;");define ( 'CCMS',true);//Variable pour calculer le tps de generation de la page ;)$time_start=microtime();// inclusion du configinclude_once('./includes/fonctions.php' );include_once('./includes/conf.php' );// Inclusion de la langue pour le portail en generalinclude_once('./langues/'.$u_lang.'/lang.php' );// Si le mod maintenance est active, on n'affiche pas le site au non-administrateurif($maintenance_mod == 1 AND $grade != 4){	//Inclusion du theme	//On charge la class du template	include('includes/class.template.php' );	$template = new Template( 'themes/'.$u_theme );	$template->set_filename('maintenance.tpl' );	$template -> assign_vars ( array(    'MAINTENANCE_TITLE' => MAINTENANCE_SITE,    'MAINTENANCE_NOTE_TITLE' => MAINTENANCE_TITLE,	'MAINTENANCE_NOTE' => ( ( $maintenance_mess == '' ) ? ('...') : to_html ( $maintenance_mess ) ),	'PSEUDO' => 'PSEUDO',	'LANG' => $u_lang,	'THEME' => $u_theme,	'PASSWORD' => 'PASSWORD',	'CONNECTION_ADMIN_ONLY' => 'Connection ( Administrateurs uniquement )',	'VALID' => valid	) );	$template->gen();}else{	//Inclusion du theme	//On charge la class du template	include('includes/class.template.php' );	$template = new Template('themes/'.$u_theme.'/');	include('includes/class.alerte.php' );	$alerte = new Alerte;	include('includes/class.log.php' );	$logs = new Log;	//on charge le fichier tempalte du header ainsi que des blocs	$template->set_filename('header.tpl' );	//On gére les blocs ici	if ( !is_file ( './themes/'.$u_theme.'/haut_blocs_left.tpl' ) )		$left = FALSE;	else		$left = TRUE;	if ( !is_file ( './themes/'.$u_theme.'/haut_blocs_right.tpl' ) )		$right = FALSE;	else		$right = TRUE;	$req_blocs = $Bdd->get_cached_data('SELECT * FROM '.PT.'_blocs WHERE afficher="1" AND colonne="left" '.( ( !$right OR !$left ) ? ('OR colonne="right"') : ('') ).' ORDER BY position ASC', 100000,'bloc') ;	foreach ($req_blocs as $id=>$row) {		$id_bloc = $row['id'];				if ( !$left )			$row['colonne'] = 'right';		if ( !$right )			$row['colonne'] = 'left';				if ( substr ( $row['bloc'] , 0 , 4 ) == 'auto' ){			$arr = explode ( '-' , $row['bloc'] );		}	   if ( file_exists('mods/'.$row['bloc'].'/bloc.php') ){			require('mods/'.$row['bloc'].'/bloc.php') ;			}		else if ( isset ( $arr ) AND $arr[0] == 'auto' AND file_exists ( './mods/free_bloc/bloc-'.$arr[1].'-'.$arr[2].'-'.$row['tbloc'].'.php' ) ) {			require( './mods/free_bloc/bloc-'.$arr[1].'-'.$arr[2].'-'.$row['tbloc'].'.php' ) ;			}		else{			$template->assign_block_vars( 'bloc', 			array ( 			'TITRE_BLOC' => ucfirst ( $row['tbloc'] ), 			'CONTENU_BLOC' => '<br /><strong>Erreur !</strong><br /><br />Le bloc &quot;'.ucfirst ( $row['tbloc'] ).'&quot; n&rsquo;existe pas.<br /><br />')			);		}	}		$template->set_filename ( 'close_middle.tpl' );		//On gére les blocs ici	if ( $right AND $left ){		$req_blocs = $Bdd->get_cached_data('SELECT * FROM '.PT.'_blocs WHERE afficher="1" AND colonne="right" ORDER BY position ASC', 100000,'bloc') ;		foreach ($req_blocs as $id=>$row) {			$id_bloc = $row['id'];						if ( substr ( $row['bloc'] , 0 , 4 ) == 'auto' ){				$arr = explode ( '-' , $row['bloc'] );			}		   if ( file_exists('mods/'.$row['bloc'].'/bloc.php') ){				require('mods/'.$row['bloc'].'/bloc.php') ;				}			else if ( isset ( $arr ) AND $arr[0] == 'auto' AND file_exists ( './mods/free_bloc/bloc-'.$arr[1].'-'.$arr[2].'-'.$row['tbloc'].'.php' ) ) {				require( './mods/free_bloc/bloc-'.$arr[1].'-'.$arr[2].'-'.$row['tbloc'].'.php' ) ;				}			else{				$template->assign_block_vars( 'bloc', 				array ( 				'TITRE_BLOC' => ucfirst ( $row['tbloc'] ), 				'CONTENU_BLOC' => '<br /><strong>Erreur !</strong><br /><br />Le bloc &quot;'.ucfirst ( $row['tbloc'] ).'&quot; n&rsquo;existe pas.<br /><br />')				);			}		}	}		//On charge les fichiers du template pour fermer colonne gauche	$template->set_filename('page.tpl' );	$template->set_filename('module.tpl' );	// Assignation des variables	$template->assign_vars(		array(		    'TITLE' => stripslashes ( htmlspecialchars($nom_site) ),		    'DESCRIPTION'  => htmlspecialchars($descriptif),			'MOT_CLEF' => htmlspecialchars($mot_clef),			'UTHEME' => $u_theme,			'COPY' => htmlspecialchars($copyright),		) 	);	/*		On affiche les blocs de 'messages'	*/	$template->set_filename('edito.tpl' );	if ( ( !isset ( $_GET['mods'] ) OR $_GET['mods'] == $mod_acc ) AND !isset ( $_GET['page'] ) ){				$template->assign_block_vars ( 'message' , 			array(				'TITRE_EDITO' => stripslashes ( htmlspecialchars ($titre_edito ) ),				'CONTENU_EDITO'  => to_html ( $edito),			)		);	}	// Si mod maintenance active, on le dit a l'admin	if($maintenance_mod == 1){		$template->assign_block_vars( 'message' , array(			'TITRE_EDITO' => MAINTENANCE_SITE,			'CONTENU_EDITO'  => MAINTENANCE_ADMIN_MESS,			)		);			}	// Si jamais la clé de cryptage du fichier config diffère de celle inclut en Bdd, c'est qu'il y a eu problème, et on averti l'administrateur afin qu'il corrige ce problème ;)	if($crypt_key != $crypt_key_config AND $grade==4){		$template->set_filename('crypt_error.tpl' );		$template->assign_vars(array(		'TITRE' => 'Erreur',		'TXT_CRYPT'  => str_replace ( '{CRYPT_KEY}' , $crypt_key , str_replace ( '{CRYPT_KEY_CONFIG}' , $crypt_key_config , nl2br ( CRYPT_KEY_ERROR ) ) ) ) );			}	////	/*MODULE COPYRIGHT*/	$sql=$Bdd->get_cached_data('SELECT '.PT.'_copy.id AS idcopy, '.PT.'_copy.question AS question FROM '.PT.'_copy',1000,'copyright' );	if($Bdd->num_rows($sql)>0){		foreach($sql AS $id=>$copy){			$template->assign_block_vars ( 'copyright_footer' , array(			'URL' => 'index.php?mods=copyright&amp;page=index&amp;id='.$copy['idcopy'],			'TXT' => stripslashes ( htmlspecialchars ( $copy['question'] ) ) ) );		}	}	/*	MODULE DE VUE DES SOURCES	*/	//Si l'admin a autorise les utilisateurs a voir la source des fichiers ou si l'utilisateur est un administrateur, on autorise la vue de la source	if(isset($_GET['source']) AND isset($_GET['mods']) AND !strpos($_GET['mods'],'../..') AND $grade == 4){		if(!isset($_GET['page']) OR strpos($_GET['page'],'../..'))			$page = './mods/'.htmlspecialchars($_GET['mods'],ENT_QUOTES).'/index.php';		else			$page = './mods/'.htmlspecialchars($_GET['mods'],ENT_QUOTES).'/'.htmlspecialchars($_GET['page'],ENT_QUOTES).'.php';		if(!ereg('config',$page)){			if(file_exists($page))				$contenu_mod = give_source ( $page );			else				header ( 'Location: index.php' );			$template->assign_block_vars('module' ,array(				'TITRE_MODULE' => PRINT_SOURCES,				'CONTENU_MODULE' => $contenu_mod ) );		}		else			header ( 'Location: index.php' );		}	else{		if (isset($_GET['mods']))			$mods = htmlspecialchars($_GET['mods'], ENT_QUOTES);		else			$mods = '';		if (isset($_GET['page']))			$page = htmlspecialchars($_GET['page'], ENT_QUOTES);				if($be_log==1 AND $uid==0){			if($mods!='register'){				$mods = 'espace_membre';				$page = 'connect';			}		}		if(isset($mods) AND eregi('../..',$mods) != false)$mods ='';		if(isset($page) AND eregi('../..',$page) != false)$page ='';		if(isset($page)){			// On inclut la langue du module si elle en a une			if ( is_file ('./mods/'.$mods.'/langues/'.$u_lang.'.php') )				include_once ('./mods/'.$mods.'/langues/'.$u_lang.'.php') ;						if (!file_exists('./mods/'.$mods.'/'.$page.'.php')){					$template->assign_block_vars('module' , array(					'TITRE_MODULE' => erreur,					'CONTENU_MODULE'  => page_notfound ) );		        }			else{				include_once './mods/'.$mods.'/'.$page.'.php'; //Si elle existe on l'inclue	        }		}		elseif(isset($mods) AND $mods!=''){			// On inclut la langue du module si elle en a une			if ( is_file ('./mods/'.$mods.'/langues/'.$u_lang.'.php') )				include_once ('./mods/'.$mods.'/langues/'.$u_lang.'.php') ;			if (!file_exists('./mods/'.$mods.'/index.php')){				if (!file_exists('./mods/'.$mods.'{N-I}/index.php')){					$template->assign_block_vars('module' , array(					'TITRE_MODULE' => erreur,					'CONTENU_MODULE'  => mod_notfound ) );  				}				else{					$template->assign_block_vars('module' , array(					'TITRE_MODULE' => erreur,					'CONTENU_MODULE'  => MOD_NOT_INSTALLED ) );				}		        }			else {								include_once './mods/'.$mods.'/index.php' ; //Sinon on l'inclut	        }					}		else {			$_GET['mods'] = $mod_acc;			// On inclut la langue du module d'accueil si disponible			if ( is_file ('./mods/'.$mod_acc.'/langues/'.$u_lang.'.php') )				include_once ('./mods/'.$mod_acc.'/langues/'.$u_lang.'.php') ;						/*				Inclusion du module d'accueil			*/			if ( !file_exists('./mods/'.$mod_acc.'/index.php') AND substr ( $mod_acc , 0 , 4 ) != 'auto' ){				if (!file_exists('./mods/'.$mod_acc.'{N-I}/index.php')){					$template->assign_block_vars('module' , array(					'TITRE_MODULE' => erreur,					'CONTENU_MODULE'  => mod_notfound ) );  				}				else{					$template->assign_block_vars('module' , array(					'TITRE_MODULE' => erreur,					'CONTENU_MODULE'  => MOD_NOT_INSTALLED ) );				}			}			else if ( substr ( $mod_acc , 0 , 10 ) == 'auto-free-' ){				// Si la page de démarrage est une page libre crée, on la charge ,)				$template->set_filename('module.tpl' );							 if ( file_exists ( './mods/free_page/'.substr ( $mod_acc , 10 , strlen ( $mod_acc ) ).'.php' ) ){					include_once ( './mods/free_page/'.substr ( $mod_acc , 10 , strlen ( $mod_acc ) ).'.php' ) ;				 }				 else{					$template->assign_block_vars('module' , array(					'TITRE_MODULE' => erreur,					'CONTENU_MODULE'  => mod_notfound ) );				 }						}			else if ( substr ( $mod_acc , 0 , 10 ) == 'auto-text-' ){				$template->set_filename('module.tpl' );				// Si la page de démarrage est une page texte crée, on l'appelle depuis sql ;) 				$query = $Bdd->get_cached_data('SELECT * FROM '.PT.'_page WHERE '.PT.'_page.id="'.substr ( $mod_acc , 10 , strlen ( $mod_acc ) ).'"',1000,'page' );				 if ( count ( $query ) > 0 ){					foreach($query AS $id => $page ){						$titre = to_html ( $page['titre'] );						$contenu = to_html ( $page['contenu'] );					}						$template->assign_block_vars('module' , array('TITRE_MODULE' => $titre, 'CONTENU_MODULE' => '<br /><br />'.$contenu));				 }				 else{					$template->assign_block_vars('module' , array(					'TITRE_MODULE' => erreur,					'CONTENU_MODULE'  => mod_notfound ) );				 }						}			else{				// Si la page de demarrage est un module qui existe, on l'apelle tout simplement ;)				include_once ('./mods/'.$mod_acc.'/index.php') ;			}	    }	}	$end_time = microtime();	$template->assign_vars(array('NB_REQUETE' => $Bdd->getNbrReq(), 									'TPS_TOT' => $Bdd->aff_time_total(),									'POURCENT_REQ' => $Bdd->sql_pourcent(), 									'POURCENT_CACHE' => $Bdd->cache_pourcent(), 									'POURCENT_PHP' => $Bdd->php_pourcent(), 									'WHITH' => with,									'QUERY_AND_GENERATE' => query_and_generate,									'SEC' => secondes,									'VERSION' => 'CrazyCMS 1.0 RC+3',									));	$template->set_filename('footer.tpl' );	$template->gen();}?>